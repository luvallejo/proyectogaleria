{"version":3,"sources":["components/ImageCard/ImageCard.js","components/ImageSearch/ImageSearch.js","App.js","index.js"],"names":["ImageCard","image","tags","split","className","src","webformatURL","alt","user","views","downloads","likes","map","tag","index","ImageSearch","searchText","useState","text","setText","onSubmit","e","preventDefault","onClick","target","value","type","placeholder","App","images","setImages","isLoading","setIsLoading","term","setTerm","useEffect","fetch","process","then","res","json","data","hits","catch","err","console","log","length","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6KA4CeA,EA1CG,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAEXC,EAAOD,EAAMC,KAAKC,MAAM,KAE9B,OACI,sBAAKC,UAAU,6CAAf,UACF,qBAAKC,IAAKJ,EAAMK,aAAcC,IAAI,GAAGH,UAAU,WAE/C,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,yCAAf,sBACYH,EAAMO,KADlB,OAGE,+BACE,+BACE,6CACCP,EAAMQ,SAET,+BACE,iDACCR,EAAMS,aAET,+BACE,6CACCT,EAAMU,eAKf,qBAAKP,UAAU,YAAf,SACKF,EAAKU,KAAI,SAACC,EAAKC,GAAN,OACP,uBAAkBV,UAAU,2FAA5B,cAEIS,IAFOC,YCNTC,EAxBK,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WAClB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAQA,OACI,qBAAKf,UAAU,iDAAf,SACI,sBAAMgB,SARG,SAACC,GACdA,EAAEC,iBAEFN,EAAWE,IAKmBd,UAAU,kBAApC,SAEI,sBAAKA,UAAU,+DAAf,UACI,uBAAOmB,QAAS,SAAAF,GAAC,OAAIF,EAAQE,EAAEG,OAAOC,QAAQrB,UAAU,kHAAkHsB,KAAK,OAAOC,YAAY,wBAClM,wBAAQvB,UAAU,0IAA0IsB,KAAK,SAAjK,4BCmBLE,MA/Bf,WACE,MAA4BX,mBAAS,IAArC,mBAAOY,EAAP,KAAeC,EAAf,KACA,EAAkCb,oBAAS,GAA3C,mBAAOc,EAAP,KAAkBC,EAAlB,KACA,EAAwBf,mBAAS,IAAjC,mBAAOgB,EAAP,KAAaC,EAAb,KAYA,OAVAC,qBAAU,WACRC,MAAM,gCAAD,OAAiCC,qCAAjC,cAA4EJ,EAA5E,kCACFK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJX,EAAUW,EAAKC,MACfV,GAAa,MAEdW,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAC3B,CAACX,IAGF,sBAAK7B,UAAU,oBAAf,UACE,cAAC,EAAD,CAAaY,WAAY,SAACE,GAAD,OAAUgB,EAAQhB,OAEzCa,GAA+B,IAAlBF,EAAOkB,QAAgB,oBAAI3C,UAAU,qCAAd,8BAGrC2B,EAAY,oBAAI3B,UAAU,qCAAd,gCAA6E,qBAAKA,UAAU,yBAAf,SACvFyB,EAAOjB,KAAI,SAAAX,GAAK,OACf,cAAC,EAAD,CAA0BA,MAAOA,GAAjBA,EAAM+C,aCvBhCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.fced21b7.chunk.js","sourcesContent":["import React from 'react'\n\nconst ImageCard = ({ image }) => {\n\n    const tags = image.tags.split(',');\n\n    return (\n        <div className=\"max-w-sm rounded overflow-hidden shadow-lg\">\n      <img src={image.webformatURL} alt=\"\" className=\"w-full\" />\n\n      <div className=\"px-6 py-4\">\n        <div className=\"font-bold text-purple-500 text-xl-mb-2\">\n          Photo By {image.user} </div> \n\n          <ul>\n            <li>\n              <strong>Views: </strong>\n              {image.views}\n            </li>\n            <li>\n              <strong>Downloads: </strong>\n              {image.downloads}\n            </li>\n            <li>\n              <strong>Likes: </strong>\n              {image.likes}\n            </li>\n          </ul>\n      </div>\n\n      <div className=\"px-6 py-4\">\n          {tags.map((tag, index) => (\n             <span key={index} className=\"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2\">\n               \n               #{tag}\n             \n             </span>\n          ))}\n      </div>\n      \n    </div>\n    );\n}\n\nexport default ImageCard","import React, { useState } from 'react'\n\nconst ImageSearch = ({searchText}) => {\n    const [text, setText] = useState('');\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        searchText(text);\n    }\n\n    return (\n        <div className='max-w-sm rounded overflow-hidden my-10 mx-auto'>\n            <form onSubmit={onSubmit} className='w-full max-w-sm'>\n\n                <div className='flex items-center border-b border-b-2 border-indigo-500 py-2'>\n                    <input onClick={e => setText(e.target.value)} className='appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none' type=\"text\" placeholder=\"Busca una imagen...\" />\n                    <button className='flex-shrink-0 bg-indigo-500 hover:bg-indigo-700 border-indigo-500 hover:border-indigo-700 text-sm border-4 text-white py-1 px-2 rounded' type=\"submit\">\n                        Buscar\n                    </button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default ImageSearch\n","import React, { useState, useEffect } from 'react';\nimport ImageCard  from './components/ImageCard/ImageCard';\nimport ImageSearch from './components/ImageSearch/ImageSearch';\n\n\nfunction App() {\n  const [images, setImages] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [term, setTerm] = useState('');\n\n  useEffect(() => {\n    fetch(`https://pixabay.com/api/?key=${process.env.REACT_APP_PIXABAY_API_KEY}&q=${term}&image_type=photo&pretty=true`)\n      .then(res => res.json())\n      .then(data => {\n        setImages(data.hits);\n        setIsLoading(false);\n      })\n      .catch(err => console.log(err));\n  }, [term]);\n\n  return (\n    <div className=\"container mx-auto\">\n      <ImageSearch searchText={(text) => setTerm(text)} />\n\n      {!isLoading && images.length === 0 && <h1 className=\"text-6xl text-center mx-auto mt-32\">No hay imagenes </h1> }\n\n\n      {isLoading ? <h1 className=\"text-6xl text-center mx-auto mt-32\">Cargando imagenes </h1> : <div className=\"grid grid-cols-3 gap-4\">\n        {images.map(image => (\n          <ImageCard key={image.id} image={image} /> \n        ))}\n      </div>}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/main.css'; \nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}